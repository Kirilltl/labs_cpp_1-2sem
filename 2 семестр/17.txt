func.h;
void set_line(size_t value, size_t number)
	{
		if (number >= row)
			throw std::runtime_error("You don't have this string");
		for (int i = 0; i < column; i++)
			elem[number] [i] = value;
	}
point.h;
#include <iostream>
using namespace std;
class Point
{
private:
	int x,y,z;
public:
	Point() {x=y=z=0;};//conctructor umolchanie
	Point(int x1, int y1, int z1);
	Point& operator=(const Point& b);
	Point operator+(const Point& b);
	friend ostream& operator<<(ostream& ost, const Point& b);
	friend istream& operator>>(istream& in, Point& b);
};

point.cpp;
#include"point.h"
Point::Point(int x1, int y1, int z1)
{
	x = x1;
	y = y1;
	z = z1;
}
Point& Point::operator=(const Point& b)
{
	if (this != &b)
	{
		x = b.x;
		y = b.y;
		z = b.z;
	}
	return (*this);
}
Point Point::operator+(const Point& b)
{
	Point a = *this;
	a.x = x + b.x;
	a.y = y + b.y;
	a.z = z + b.z;
	return a;
}
ostream& operator<<(ostream& ost, const Point& b)
{
	ost<<"x = "<<b.x<<"y = "<<b.y<<"z = "<<b.z<<endl;
	return ost;
}
istream& operator>> (istream& in, Point& b)
{
	//неконстантным, чтобы мы имели возможность изменить члены класса
	in >> b.x;
	in >> b.y;
	in >> b.z;
	return in;
}

